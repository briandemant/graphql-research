enum ListingOrderEnum {
	CREATED_AT
	UPDATED_AT
	RANDOM
}

enum ListingStatusEnum {
	ACTIVE
	INACTIVE
	EXPIRED
	DRAFT
}

enum ListingTypeEnum {
	SELL
	BUY
	FREE
	TRADE
	# Properties (Apartments, houses, etc.)
	LEASE
	# Things (Cars, machines, etc.)
	RENT
	OTHER
}

type Listing implements Entity {
	# basic
	id: UuidV4!
	slug: NonEmptyString!
	owner: User!
	online: Boolean!
	status: ListingStatusEnum!

	# textual content
	title: NonEmptyString!
	desc: NonEmptyString!
	publicationTitle: NonEmptyString!
	publicationDesc: NonEmptyString!

	# pricing
	price: NonEmptyString!
	offersAccepted: Boolean
	# Bizz user only
	vatEnabled: Boolean
	# relationships
	category: Category!
	primaryImage: Image
	images: [Image!]
	# (categoryFields should be a connection on the Category entity)

	# misc
	type: ListingTypeEnum! #TODO: rename to something that makes sense (in the context of: selling, buying, trading, giving away for free)
	# Bizz user only
	homepage: NonEmptyString
	# contact - (might be inherited from owner or listing specific)
	phone: NonEmptyString

	# location - (might be inherited from owner or defined for the listing specifically)
	location: Location!

	# Product - package, addons, publications
	productPackage: ProductPackage!
}

extend type Query {
	listing(id: UuidV4!): Listing
	listings(cursor: CursorPaginationParams, sortBy: ListingOrderEnum = CREATED_AT, reverse: Boolean = false): [Listing!]!

	# TODO: Don't know if this should be a connection of sorts? Or a computed field?
	frontPageListings(
		cursor: CursorPaginationParams
		sortBy: ListingOrderEnum = RANDOM
		reverse: Boolean = false
	): [Listing!]!
}
