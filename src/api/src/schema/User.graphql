type User {
	id: SimpleID!
	name: NonEmptyString
	userName: NonEmptyString
	createdAt: DateTime!

	# Cursor pagination
	listingConnection(
		#term: String #wilcard search
		cursor: CursorPaginationParams
		sortBy: ListingOrderEnum = CREATED_AT
		reverse: Boolean = false
	): ListingConnection

	# Generic pagination
	favoriteListingsConnection(
		pagination: PagePaginationParams
		sortBy: ListingOrderEnum = CREATED_AT
		reverse: Boolean = false
	): FavoriteListingConnection
}

# supported cursor is the same as order key
type ListingConnection {
	# A list of edges (same as nodes but with cursor).
	edges: [ListingEdge]
	# A list of nodes.
	nodes: [Listing]

	# Information to aid in pagination.
	pageInfo: PageInfo!
	# Identifies the total count of items in the connection.
	totalCount: Int!
}

type FavoriteListingConnection {
	# A list of edges (same as nodes but with cursor).
	edges: [FavoriteListingEdge]
	# A list of nodes.
	nodes: [Listing]
	# Information to aid in pagination.
	pageInfo: PageInfo!
	# Identifies the total count of items in the connection.
	totalCount: Int!
}

type ListingEdge {
	node: Listing
	createdAt: DateTime
}

type FavoriteListingEdge {
	node: Listing
	createdAt: DateTime
}

extend type Query {
	user(id: SimpleID!): User
}
