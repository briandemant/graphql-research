# schema: ./server/schema.ts
schema: ./src/schemaV2/*.graphql
hooks:
  afterOneFileWrite:
    - prettier --config ../../.prettierrc.json --write
generates:

  # Server types
  ./src/_gen/server-types.ts:
    # hooks:
    #   afterOneFileWrite:
    #     - prettier --config ../../.prettierrc.json --write
    config:
      defaultMapper: any
      typesPrefix: GQL
      enumPrefix: GQL
      immutableTypes: true
      skipTypename: true
      avoidOptionals: true
      showUnusedMappers: true
      noSchemaStitching: true
      # useIndexSignature: true
      contextType: ../schemaV2/context#Context
      scalars:
        DateTime: ValidDate
        NonEmptyString: NonEmptyString
        Md5: Md5
        SimpleID: SimpleID
        UuidV4: UuidV4
      mappers:
        DateTime: "@demo/lib#ValidDate"
        ID: "@demo/lib#SimpleID"
        NonEmptyString: "@demo/lib#NonEmptyString"
        SimpleID: "@demo/lib#SimpleID"
        UuidV4: "@demo/lib#UuidV4"
        Md5: "@demo/lib#Md5"
        String: string
    plugins:
      - add: |
          /* eslint-disable */
          // PLEASE DO NOT EDIT
          export * from './manual-server-types'
          // import { GQLRole } from './manual-server-types'
      - typescript
      - typescript-resolvers

  # Client Types
  ./src/_gen/client-types.ts:
    config:
      immutableTypes: true
      skipTypename: true
      avoidOptionals: true
      scalars:
        DateTime: Date
        ID: string
        NonEmptyString: string
        Md5: string
        UuidV4: string
        Slug: string
    plugins:
      - add: |
          /* eslint-disable */
          // PLEASE DO NOT EDIT !!
      - typescript
