# schema: ./server/schema.ts
schema: ./src/schema/*.gql
hooks:
  afterOneFileWrite:
    - prettier --config ../../.prettierrc.json --write
generates:
  # Server types
  ./src/_gen/server-types.ts:
    # hooks:
    #   afterOneFileWrite:
    #     - prettier --config ../../.prettierrc.json --write
    config:
      defaultMapper: any
      typesPrefix: GQL
      enumPrefix: GQL
      immutableTypes: true
      skipTypename: true
      avoidOptionals: true
      showUnusedMappers: true
      noSchemaStitching: true
      # useIndexSignature: true
      contextType: ../schema/context#Context
      scalars:
        DateTime: ValidDate
        Email: NonEmptyString
        ID: UuidV4
        Md5: Md5
        NonEmptyString: NonEmptyString
        Slug: NonEmptyString
        UuidV4: UuidV4
        URL: NonEmptyString
      mappers:
        String: String
        Int: Number
        Boolean: Boolean
        DateTime: ValidDate
        Email: ValidEmail
        ID: UuidV4
        Md5: Md5
        NonEmptyString: NonEmptyString
        Slug: NonEmptyString
        UuidV4: UuidV4
        URL: ValidURL
    plugins:
      - add: |
          /* eslint-disable */
          // PLEASE DO NOT EDIT
          export * from './manual-server-types'
          import {
            Md5, NonEmptyString, UuidV4, ValidDate,ValidEmail,ValidURL
          } from '@demo/lib'
          // import { GQLRole } from './manual-server-types'
      - typescript
      - typescript-resolvers

  # Client Types
  ./src/_gen/client-types.ts:
    config:
      immutableTypes: true
      skipTypename: true
      avoidOptionals: true
      scalars:
        DateTime: Date
        ID: string
        NonEmptyString: string
        Md5: string
        UuidV4: string
        Slug: string
    plugins:
      - add: |
          /* eslint-disable */
          // PLEASE DO NOT EDIT !!
      - typescript
